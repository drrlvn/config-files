# -*- mode: sh; -*-
# vim: set ft=zsh:

autoload -Uz vcs_info

zstyle ':vcs_info:*' enable git hg bzr svn
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' stagedstr		'%F{green}‚ú±'
zstyle ':vcs_info:*' unstagedstr	'%F{red}‚ú±'
zstyle ':vcs_info:*' branchformat	'%b%%b%f:%B%F{yellow}%r'
zstyle ':vcs_info:*' formats		'%F{magenta}ÓÇ† %F{white}%b%c%u%m  '
zstyle ':vcs_info:*' actionformats	'%F{magenta}(%F{white}%b%c%u%m%F{magenta}|%F{red}%a%F{magenta}) '
zstyle ':vcs_info:*+set-message:*' hooks set-message
zstyle ':vcs_info:*+no-vcs:*' hooks no-vcs

+vi-set-message() {
    case ${vcs} in
        git)
            # Show +N/-N when your local branch is ahead-of or behind remote HEAD.
            local -a behind_ahead
            local -a gitstatus

            behind_ahead=($(git rev-list --count --left-right ${hook_com[branch]}@{upstream}...@ 2>/dev/null))
            (( $behind_ahead[1] )) && gitstatus+=( "%F{red}‚Üì${behind_ahead[1]}" )
            (( $behind_ahead[2] )) && gitstatus+=( "%F{green}‚Üë${behind_ahead[2]}" )

            (( ${#gitstatus} )) && hook_com[misc]+="%F{magenta}|%b${(@j:%F{white\}/:)gitstatus}%B"
            ;;

    esac
}

_venv_info() {
    if [[ -z ${VIRTUAL_ENV} ]]; then
        _venv_prompt=''
        return;
    fi
    local -a venv_list
    venv_list=("${(@s:/:)${VIRTUAL_ENV}}")
    local venv=${venv_list[-1]}
    if [[ ${venv} == ".env" ]]; then
        venv=${venv_list[-2]}
    fi
    _venv_prompt="%F{yellow}üêç %F{white}${venv}  "
}

add-zsh-hook precmd vcs_info
add-zsh-hook precmd _venv_info
if [[ -n $SSH_CLIENT || $EUID -eq 0 ]]; then
    PROMPT_HOST='%F{magenta}%n@%m%f'
fi
PROMPT='%B${PROMPT_HOST} %(?.%F{green}‚úî.%F{red}‚úò) %F{red}‚ùØ%F{yellow}‚ùØ%F{green}‚ùØ%b%f%k '
RPROMPT='%B${vcs_info_msg_0_}${_venv_prompt}%F{blue}${_abbrev_pwd}'
SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
