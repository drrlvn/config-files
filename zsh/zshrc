setopt extended_glob
setopt correct
setopt numeric_glob_sort
setopt rc_expand_param
setopt complete_in_word
setopt no_nomatch
setopt prompt_subst

# pushd options
setopt auto_cd
setopt auto_pushd
setopt pushd_silent
setopt pushd_to_home
setopt pushd_ignore_dups

# history options
HISTFILE=~/.history
SAVEHIST=10000
HISTSIZE=20000

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_fcntl_lock
setopt hist_find_no_dups
setopt hist_ignore_space
setopt hist_no_store
setopt hist_reduce_blanks
setopt inc_append_history

bindkey -e

autoload -Uz compinit edit-command-line promptinit url-quote-magic zargs zcalc zmv
zmodload zsh/deltochar
compinit
promptinit; prompt spatz

redraw-prompt() {
    local precmd
    for precmd in $precmd_functions; do
        $precmd
    done
    zle reset-prompt
}
zle -N redraw-prompt

expand-or-complete-with-dots() {
    print -Pn "%B%F{red}...%f%b"
    zle expand-or-complete
    zle redisplay
}
zle -N expand-or-complete-with-dots
bindkey "\C-I" expand-or-complete-with-dots

bash-unix-filename-rubout() {
	local WORDCHARS=${WORDCHARS}/
	zle backward-kill-word
}
zle -N bash-unix-filename-rubout
bindkey '\C-w' bash-unix-filename-rubout

zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

zle -N self-insert url-quote-magic

bindkey ';3D' emacs-backward-word
bindkey ';5D' emacs-backward-word
bindkey '[D' emacs-backward-word
bindkey '[1;3D' emacs-backward-word
bindkey '[1;5D' emacs-backward-word
bindkey ';3C' emacs-forward-word
bindkey ';5C' emacs-forward-word
bindkey '[C' emacs-forward-word
bindkey '[1;3C' emacs-forward-word
bindkey '[1;5C' emacs-forward-word

bindkey '[5~' history-beginning-search-backward
bindkey '[6~' history-beginning-search-forward

bindkey '[H' beginning-of-line
bindkey 'OH' beginning-of-line
bindkey '[1~' beginning-of-line
bindkey '[F' end-of-line
bindkey 'OF' end-of-line
bindkey '[4~' end-of-line
bindkey '[3~' delete-char
bindkey '[3;3~' delete-word

bindkey '\ez' delete-to-char
bindkey '\e;' copy-prev-shell-word

# Meta-u to chdir to the parent directory
goto-parent() { cd .. ; zle redraw-prompt }
zle -N goto-parent
bindkey '\eu' goto-parent
# Meta-h goes home
goto-home() { cd ; dirs -c ; zle redraw-prompt }
zle -N goto-home
bindkey '\eh' goto-home
# Meta-p pops the dir stack
pop-dir() { popd &> /dev/null && zle redraw-prompt }
zle -N pop-dir
bindkey '\ep' pop-dir
# Meta-s to insert sudo in the beginning of the line
prepend-sudo() {
    if [[ "$BUFFER" != su(do|)\ * ]]; then
        BUFFER="sudo $BUFFER"
        (( CURSOR += 5 ))
    fi
}
zle -N prepend-sudo
bindkey '\es' prepend-sudo
# Meta-r to delete command
bindkey -s '\er' '^Ad'

bindkey ' ' magic-space

# bind C-M-{Left,Right} to cycle through dir stack
cycle-dir-left() { pushd -0 && zle redraw-prompt }
zle -N cycle-dir-left
bindkey '\e[1;7C' cycle-dir-left
cycle-dir-right() { pushd +1 &> /dev/null && zle redraw-prompt }
zle -N cycle-dir-right
bindkey '\e[1;7D' cycle-dir-right

if [[ $TERM = "xterm-termite" ]]; then
    eval $(dircolors -b <(dircolors -p | sed '/^TERM xterm$/a TERM xterm-termite'))
else
    eval $(dircolors -b)
fi

# enable cache
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

zstyle ':completion:*' menu select=1 _complete _ignored _approximate
zstyle ':completion:*' list-dirs-first 'yes'
zstyle ':completion:*' group-name ''
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:descriptions' format "%B- %d -%b"

# enable fuzzy matching when completing
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# highlight differing character of completions
zstyle -e ':completion:*:default' list-colors 'reply=("${PREFIX:+=(#bi)($PREFIX:t)(?)*==02=01}:${(s.:.)LS_COLORS}")'

WORDCHARS=${WORDCHARS//\/}
READNULLCMD=less

PATH="${HOME}/bin:${PATH}"
if hash ruby 2>/dev/null; then
    PATH="$PATH:$(ruby -e 'print Gem.user_dir')/bin"
fi

export LESS="-R -n -F -X"

alias gg='git grep'

alias grep='grep --color=auto'
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -Iv'
alias ls='ls --color=auto --group-directories-first -lFhX'
alias la='ls -A'
alias tree='tree --dirsfirst'
alias reload='rehash; source ~/.zshrc'

# enable zsh-history-substring-search
. "${0:h}/zsh-history-substring-search/zsh-history-substring-search.zsh"
bindkey "[A" history-substring-search-up
bindkey "[B" history-substring-search-down

# enable zsh-syntax-highlighting
. "${0:h}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
ZSH_HIGHLIGHT_STYLES[globbing]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[history-expansion]='fg=blue,bold'

# enable fasd
PATH="${PATH}:${0:h}/fasd"
eval "$(fasd --init auto)"

# enable command-not-found hook on arch
[[ -f /usr/share/doc/pkgfile/command-not-found.zsh ]] && source /usr/share/doc/pkgfile/command-not-found.zsh
